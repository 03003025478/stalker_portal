{% extends 'layout.twig' %}
{% import '/macro/iptw_macro.twig' as main_macro %}
{% set title = 'tasks' %}

{% block content %}
{#    <div class="row header_title">
        <div class="col-xs-10 col-sm-6">
            <h3>Отчет</h3>
        </div>
    </div>#}
    <div id="iptv_list">
        <div class="row">
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                    {{ main_macro.get_filter('state', 'Состояние', 'id', 'title', app['taskState'], 2, 8) }}
                    {{ main_macro.get_filter('task_type', 'Тип задания', 'id', 'title', app['taskType'], 2, 8, 1) }}
                    {{ main_macro.get_filter('video_quality', 'Качество видео', 'id', 'title', app['videoQuality'], 2, 8) }}
                    <div class="col-xs-6 col-sm-6 col-md-4 col-lg-4 filter no-padding" data-tvfilter="time_period">
                        <span class="col-xs-3 col-sm-2 filter">
                            Период: 
                        </span>
                        <div class="col-xs-3 col-sm-3 filter no-padding leftbordercircle" data-tvfilter="time_period">
                            <input class="col-xs-12 col-sm-12 filter" placeholder="С" type="text" id="datepicker_from" name="interval_from" value="{% if attribute(app['filters'], 'interval_from') is defined %}{{ app['filters']['interval_from'] }}{% endif %}">
                        </div>
                        <div class="col-xs-3 col-sm-3 filter no-padding" data-tvfilter="time_period">
                            <input class="col-xs-12 col-sm-12 filter" placeholder="По" type="text" id="datepicker_to" name="interval_to" value="{% if attribute(app['filters'], 'interval_to') is defined %}{{ app['filters']['interval_to'] }}{% endif %}">
                        </div>
                    </div>
            </div>
        </div>
        
        <div class="row">
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                <div class="box-header">
                    <div class="box-name">
                        <div class="row">
                            <div class="col-xs-10 col-sm-8 col-sm-offset-2 text-center bg-warning">
                                <span class="text_black">Отчет формируется по закрытым и отклоненным задачам</span>
                            </div>
                        </div>
                    </div>
                    <div class="no-move"></div>
                </div>
                <div class="box">
                    {% if attribute(app, 'allVideoDuration') is defined%}
                    <div class="col-xs-10 col-sm-8 col-sm-offset-2 text-center" style="z-index: 100;">
                        <h4 id="videoduration">Суммарная длительность, мин: {{ app['allVideoDuration'] }}</h4>
                    </div>
                    {% endif %}
                    {% if attribute(app, 'dropdownAttribute') is defined %}
                    {{ main_macro.get_dropdown_attribute(app['dropdownAttribute']) }}
                    {% endif %}
                    <div class="box-content">
                        <div class="box-content no-padding">
                            <table class="table table-striped table-bordered table-hover table-datatable" id="datatable-1">
                                {% if attribute(app, 'dropdownAttribute') is defined %}
                                {{ main_macro.get_datatable_head(app['dropdownAttribute']) }}
                                {% endif %}
                                <tbody>
                                    {% if attribute(app, 'allData') is defined  and app.allData|length > 0%}
                                        <!-- Start: list_row -->
                                        {% for item in app.allData %}
                                            <tr data-taskid="{{ item.id }}">                                               
                                                <td>{{ item.id }}</td>
                                                <td>{{ item.type }}</td>
                                                <td>{{ item.start_time|date('M d, Y H:i') }}</td>
                                                <td>{{ item.end_time|date('M d, Y H:i') }}</td>
                                                <td><a href="{{ app.request.baseUrl }}/{{ app.controller_alias }}/task-detail-{% if app['task_type'] == 'karaoke' %}karaoke{% else %}video{% endif %}?id={{ item.id }}">{{ item.name }}</a></td>
                                                <td>{{ item.video_quality }}</td>
                                                <td>{{ item.duration }}</td>
                                                <td>{{ item.to_user_name }}</td>
                                                <td>
                                                    <span class="txt-{{app['taskStateColor'][item.state]}}">{{ app["taskState"][item.state]['title'] }}</span>
                                                    {% if not(item.archived == '0') %}
                                                        <br><span class="bg-{{app['taskStateColor'][4]}}">{{ app["taskState"][4]['title'] }}</span>
                                                    {% endif %}
                                                </td>
                                            </tr>
                                        {% endfor %}
                                    {% endif %}
                                    <!-- End: list_row -->
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
                                    
    <script type="text/javascript" defer>

        function closeModalBox(){
            $("#modalbox").hide();
            $('#modalbox').find('.modal-header-name span').empty();
            $('#modalbox').find('.devoops-modal-inner').empty();
            $('#modalbox').find('.devoops-modal-bottom').empty();
        }
        
        function TestTable1() {
            $('#datatable-1').on('xhr.dt', function (e, settings, json) {
                var taskState={
                {% if attribute(app,'taskState') is defined %}
                    {% for key, item in app.taskState %}
                        {% if not loop.last %}'{{ key }}':'{{item.title}}',{% else %}'{{ key }}':'{{item.title}}'{% endif %}
                    {% endfor %}
                {% endif%}
                };
                var taskStateColor=[
                {% if attribute(app,'taskStateColor') is defined %}
                    {% for item in app.taskStateColor %}
                        {% if not loop.last %}'{{item}}',{% else %}'{{item}}'{% endif %}
                    {% endfor %}
                {% endif%}
                ];
                if (typeof (json.data) == 'object'&& json.data.length >0) {
                    var date;
                    for (var i in json.data) {
                        var id = json.data[i].id;
                        var state = json.data[i].state;
                        var name = json.data[i].name;
                        json.data[i].name = '<a href="{{ app.request.baseUrl }}/{{ app.controller_alias }}/task-detail-{% if app['task_type'] == 'karaoke' %}karaoke{% else %}video{% endif %}?id='+ id + '">' + name + '</a>';
                        
                        json.data[i].state = '<span class="txt-' + taskStateColor[state] + '">'+taskState[state]+'</span>';
                        if (json.data[i].archived != '0'){
                            json.data[i].state += '<br><span class="bg-' + taskStateColor[4] + '">'+taskState[4]+'</span>';
                        }
                        date = json.data[i]['start_time'];
                        if (date > 0) {
                            date = new Date(date * 1000);
                            json.data[i]['start_time'] = date.toLocaleFormat("%b %d, %Y %H:%M");
                        }
                        date = json.data[i]['end_time'];
                        if (date > 0) {
                            date = new Date(date * 1000);
                            json.data[i]['end_time'] = date.toLocaleFormat("%b %d, %Y %H:%M");
                        }
                    }
                }
                if(typeof(json.videotime != 'undefined') && json.videotime!=-1) {
                    $('#videoduration').text($('#videoduration').text().replace(/\d+/ig, json.videotime));
                }
                
            }).dataTable({
                "processing": true,   
                "serverSide": true,
                "ajax": {
                    "url": "{{ app.request.baseUrl }}/{{ app.controller_alias }}/tasks-report-json",
                    "data": function (d) {
                        d['task_type'] = '{{ app['task_type'] }}';
                        var params = $.parseParams(window.location.href.split('?')[1] || ''); //window.location.href.split('?')[1] || '' 
                        for (var i in params) {
                            d[i] = params[i];
                        }
                        
                        $('input[id^="datepicker_"]').each(function () {
                            d['filters[' + $(this).attr("id").replace("datepicker_", "interval_") + ']'] = $(this).val();
                        });
                    }
                },
                "deferLoading": [ {{ app.recordsFiltered }}, {{ app.totalRecords }} ],
                "language": {
                    "url": "./plugins/datatables/lang/ru_RU.json"
                },
                "columns": [
                    {"data": 'id'},
                    {"data": 'type'},
                    {"data": 'start_time'},
                    {"data": 'end_time'},
                    {"data": 'name'},
                    {"data": 'video_quality'},
                    {"data": 'duration'},
                    {"data": 'to_user_name'},
                    {"data": 'state'}
                ],
                "bFilter": true,
                "bPaginate": true,
                "bInfo": true,
                "columnDefs": [
                    { className: "action-menu", "targets": [ -1 ] },
                    {"searchable": false, "targets": [-1, -2, 1]},
                    {"sortable": false, "targets": [1]},
                    {#{"width": "19%", "targets": [5] },
                    {"width": "5%", "targets": [0, 4, 6,  7, -1] },
                    {"width": "14%", "targets": [1, 2, 3, 8] }#}
                ]
            });
            
            $("#attribute_set input[type='checkbox']").each(function(index){
                $("#datatable-1").dataTable().fnSetColumnVis( index - 1, $(this).prop('checked') );
            });
        }

        function yelp() {
            $(document).ready(function () {
                
                $("#datepicker_from").datepicker({
                    numberOfMonths: 1,
                    language: 'ru',
                    dateFormat: 'dd/mm/yy',
                    onClose: function (selectedDate) {
                        $("#datepicker_to").datepicker("option", "minDate", selectedDate);
                        $('#datatable-1').DataTable().ajax.reload();
                    }
                });
                $("#datepicker_to").datepicker({
                    numberOfMonths: 1,
                    language: 'ru',
                    dateFormat: 'dd/mm/yy',
                    onClose: function (selectedDate) {
                        $("#datepicker_from").datepicker("option", "maxDate", selectedDate);
                        $('#datatable-1').DataTable().ajax.reload();
                    }
                });
                
                $(document).on('click', "a.main_ajax[disabled!='disabled']", function (e) {
                    e.stopPropagation();
                    e.preventDefault();
                    var sendData = $(this).data();
                    sendData['task_type'] = '{{ app['task_type'] }}';
                    ajaxPostSend($(this).attr('href'), sendData, false, false);
                    $(this).closest('div.open').removeClass('open');
                    return false;
                });

                $("#form_reset").on('click', function (e) {
                    e.stopPropagation();
                    e.preventDefault();
                    $(this).closest('form').get(0).reset();
    {#                    $("#cmd_data").find("tr:visible").remove();#}
                    return false;
                });
                
                $("#modalbox_ad button[type='submit']").on('click', function (e) {
                    e.stopPropagation();
                    e.preventDefault();
                    var sendData = new Object();
                    var lengthObj = 0;
                    var form_fields = $("#modalbox_ad input.own_fields:not(:disabled), #modalbox_ad select.own_fields:not(:disabled)");
                        form_fields.each(function () {
                        if ($(this).val()) {
                            sendData[this.name] = $(this).val();
                            lengthObj++;
                        }
                    });
                    if (lengthObj < form_fields.length) {
                        alert('Необходимо заполнить все поля');
                        return false;
                    }
                    ajaxPostSend($("#modalbox_ad form").attr('action'), sendData, false, false);
                    return false;
                });
                               
                $(document).on('click', "#modalbox, #modalbox a.close-link, #modalbox a.close-link *", function(e){
                    if (e.currentTarget != e.target) {
                        return;
                    }
                    e.stopPropagation();
                    e.preventDefault();
                    closeModalBox();
                    return false;
                });
                
                $("#add_karaoke").on("click", function (e) {
                    e.stopPropagation();
                    e.preventDefault();
                    var tmp_id = $('#datatable-1 tr:last').attr('id');
                    if (!tmp_id) {
                        tmp_id = "tr_" + $.randString();
                        $('#datatable-1 tr:last').attr('id', tmp_id);
                    }
                    $("#modalbox_ad").data('tr_id', tmp_id);
                    $("#modalbox_ad").find(".modal-header-name").children('span').text('Добавить');
                    $("#modalbox_ad input").prop("disabled", false).removeAttr('disabled').val('');
                    $("#modalbox_ad input[type='hidden']").attr('disabled', 'disabled').val('');
                    $("#modalbox_ad select").prop("disabled", false).removeAttr('disabled').find('option').removeAttr('selected');
                    
                    checkModalProtocol();
                    $("#modalbox_ad").show();
                    //        $(this).closest('.form-group').find('tbody tr:hidden').show();
                    return false;
                });
                
                LoadDataTablesScripts(TestTable1);
            });
        }

        document.addEventListener("DOMContentLoaded", yelp, false);
        
        var setTasksModal = function (data) {
            $("#modalbox_ad").find(".modal-header-name").children('span').text('Редактировать');
            if (data.data.length == 1) {
                var row = data.data[0];
                for (var field_name in row) {
                    $("#modalbox_ad input[name='" + field_name + "']").val(row[field_name]);
                }
                $("#modalbox_ad select[name='protocol'] option").each(function () {
                    $(this).attr('selected', $(this).val().toString() == data.data[0]['protocol'].toString());
                })
            }
            $("#modalbox_ad input").removeAttr('disabled');
            $('#s2_protocol').select2("destroy").select2({minimumResultsForSearch: -1});
            $("#modalbox_ad").show();
        }
        
        var manageTasks = function (obj) {
            closeModalBox();
            $("#modalbox_ad").click();
            $('#datatable-1').DataTable().ajax.reload();
        }
        
    </script>
{% endblock %}