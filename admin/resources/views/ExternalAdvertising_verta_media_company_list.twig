{% extends 'layout.twig' %}
{% import '/macro/iptw_macro.twig' as main_macro %}
{% set title = ('Advertising'|trans ~ ': ' ~ 'List of companies'|trans) | trans %}

{% block content %}
    <div id="iptv_list">
        <div class="row">
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                {#{{ main_macro.get_filter('status', 'Status'|trans, 'id', 'title', app['allStatus'], 3, NULL, NULL, TRUE) }}
                {{ main_macro.get_filter('lic_count', 'License count'|trans, 'count', 'title', app['allLicCount'], 3, NULL, NULL, TRUE) }}#}

                <a href="{{ app.request.baseUrl }}/{{ app.controller_alias }}/certificate-request" class="btn btn-success green pull-right">{{ 'Add company'|trans }}</a>
            </div>
        </div>
        <div class="row">
            <div class="box">
                {#{% if attribute(app, 'dropdownAttribute') is defined %}
                    {{ main_macro.get_dropdown_attribute(app['dropdownAttribute']) }}
                {% endif %}#}
                <div class="box-content">
                    <div class="box-content no-padding">
                        <div class="row">
                            <div class="col-xs-12 col-sm-12">
                                <div class="dataTables_processing"></div>
                                <table class="table  table-hover table-datatable" id="datatable-1">
                                    {% if attribute(app, 'dropdownAttribute') is defined %}
                                        {{ main_macro.get_datatable_head(app['dropdownAttribute']) }}
                                    {% endif %}
                                    <tbody>

                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script type="text/javascript" defer="defer">

        function TestTable1() {
            $('#datatable-1').on('xhr.dt', function (e, settings, json) {
                if (typeof (json.data) == 'object') {
                    for (var i in json.data) {
                        json.data[i] = rowDataPrepare(json.data[i]);
                    }
                }
            }).dataTable({
                "processing": true,
                "serverSide": true,
                "ajax" : {
                    "url" : "{{ app.request.baseUrl }}/{{ app.controller_alias }}/verta-media-company-list-json"
                },
                "language": {
                    "url": "{{ app.datatable_lang_file }}"
                },
                {% if attribute(app, 'dropdownAttribute') is defined %}
                {{ main_macro.get_datatable_column(app['dropdownAttribute']) }}
                {% endif %}
                "bFilter": true,
                "bPaginate": true,
                "bInfo": true,
                "aoColumnDefs": [
                    /*{className: "action-menu", "targets": [-1]},*/
                    {"searchable": false/*, "targets": [0, 2, 3, 5, 7, -1]*/},
                    {"sortable": false/*, "targets": [0, 5, 6, -1]*/}
                ]
            }).prev('.dataTables_processing').hide(50);
        }

        function yelp() {
            $(document).ready(function () {

                $(document).on('click', "a.main_ajax:not([disabled])", function (e) {
                    e.stopPropagation();
                    e.preventDefault();
                    var _this = this;
                    $("#modalbox").data('complete', 0);
                    var sendData = $(_this).data();
                    ajaxPostSend($(_this).attr('href'), sendData, false );
                    $(this).closest('div.open').removeClass('open');
                    return false;
                });

                $(document).on('click', "#modalbox, #modalbox a.close-link, #modalbox a.close-link *", function (e) {
                    if (e.currentTarget != e.target) {
                        return;
                    }
                    e.stopPropagation();
                    e.preventDefault();
                    if ($("#modalbox").data('complete') && $("#modalbox").data('complete') == 1) {
                        JScloseModalBox();
                    } else {
                        for (i = 0; i < 3; i++) {
                            $('#modalbox > div').fadeTo('slow', 0.5).fadeTo('slow', 1.0);
                        }
                    }
                    return false;
                });
                $("#iptv_list").on('click', 'div[data-tvfilter] ul a', function(e){
                    e.stopPropagation();
                    e.preventDefault();
                    $(this).closest('.open').removeClass('open');
                    $(this).closest('[data-tvfilter]').data('filterval', $(this).data('filter')).find("span:nth-of-type(2)").text($(this).text());
                    $("#datatable-1").DataTable().draw();
                });

                LoadDataTablesScripts(TestTable1);
            });
        }

        document.addEventListener("DOMContentLoaded", yelp, false);

        function rowDataPrepare(item){
            item.lic_count = typeof (lic_count_set[item.lic_count]) != 'undefined'? lic_count_set[item.lic_count]: item.lic_count;
            var status = item.status;
            item.status = status_set[item.status];
            if (item.awaiting) {
                item.status = "<a class='main_ajax txt-success' href='{{ app.request.baseUrl }}/{{ app.controller_alias }}/certificate-install' data-id='" + item.id + "'>{{ 'Install'|trans }}</a>";
            } else if ( status == 5 ) {
                item.status += "<br><a class='txt-danger' href='{{ app.request.baseUrl }}/{{ app.controller_alias }}/certificate-request?id=" + item.id + "'>{{ 'Сertificate request'|trans }}</a>";
            }
            var dateSet = new Date();
            dateSet.setTime(item.cert_begin * 1000);
            item.cert_begin = dateSet.toLocaleFormat("%d.%m.%Y");
            dateSet.setTime(item.cert_end * 1000);
            item.cert_end = dateSet.toLocaleFormat("%d.%m.%Y");

            if (item.expires_30_days) {
                item.cert_end += "<br><a class='txt-danger' href='{{ app.request.baseUrl }}/{{ app.controller_alias }}/certificate-request?id=" + item.id + "'>{{ 'Сertificate request'|trans }}</a>";
            }

            item.id = "<a href='{{ app.request.baseUrl }}/{{ app.controller_alias }}/certificate-detail?id=" + item.id + "'>" + item.id + "</a>";
            return item;
        }

        function reDrawDataTable(data){
            if (data.data) {
                var newData = [];
                $('#datatable-1').dataTable().fnClearTable();
                for (var i in data.data) {
                    newData.push(rowDataPrepare(data.data[i]));
                }
                $('#datatable-1').dataTable().fnAddData(newData);
                $('#datatable-1').DataTable().rows().invalidate(newData).draw();
            }
        }

    </script>

{% endblock %}